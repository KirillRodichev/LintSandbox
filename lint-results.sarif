{
    "$schema" : "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
    "version" : "2.1.0",
    "runs" : [
        {
            "tool": {
                "driver": {
                    "name": "Android Lint",
                    "fullName": "Android Lint (in gradle)",
                    "version": "7.1.3",
                    "semanticVersion": "7.1.3",
                    "organization": "Google",
                    "informationUri": "https://developer.android.com/studio/write/lint",
                    "fullDescription": {
                        "text": "Static analysis originally for Android source code but now performing general analysis"
                    },
                    "language": "en-US",
                    "rules": [
                        {
                            "id": "InsecureWebViewImplementationIssueId",
                            "shortDescription": {
                                "text": "The software provides an Applications Programming Interface (API) or similar interface \n            for interaction with external actors, but the interface includes a dangerous method or \n            function that is not properly restricted."
                            },
                            "fullDescription": {
                                "text": "This weakness can lead to a wide variety of resultant weaknesses, depending on the \nbehavior of the exposed method. It can apply to any number of technologies and \napproaches, such as ActiveX controls, Java functions, IOCTLs, and so on."
                            },
                            "defaultConfiguration": {
                                "level": "warning",
                                "rank": 70
                            },
                            "properties": {
                                "tags": [
                                    "Security"
                                ]
                            }
                        },
                        {
                            "id": "ObsoleteSdkInt",
                            "shortDescription": {
                                "text": "Obsolete SDK_INT Version Check"
                            },
                            "fullDescription": {
                                "text": "This check flags version checks that are not necessary, because the minSdkVersion (or surrounding known API level) is already at least as high as the version checked for.\n\nSimilarly, it also looks for resources in -vNN folders, such as values-v14 where the version qualifier is less than or equal to the minSdkVersion, where the contents should be merged into the best folder.",
                                "markdown": "This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.\n\nSimilarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
                            },
                            "defaultConfiguration": {
                                "level": "warning",
                                "rank": 50
                            },
                            "properties": {
                                "tags": [
                                    "Performance"
                                ]
                            }
                        },
                        {
                            "id": "UnusedResources",
                            "shortDescription": {
                                "text": "Unused resources"
                            },
                            "fullDescription": {
                                "text": "Unused resources make applications larger and slow down builds.\n\nThe unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.\n\nYou can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
                            },
                            "defaultConfiguration": {
                                "level": "warning",
                                "rank": 80
                            },
                            "properties": {
                                "tags": [
                                    "Performance"
                                ]
                            }
                        }
                    ]
                }
            },
            "originalUriBaseIds": {
                "%SRCROOT%": {
                    "uri": "file:///C:/projects/_sec/lint-sandbox/"
                }
            },
            "results": [
                {
                    "ruleId": "InsecureWebViewImplementationIssueId",
                    "ruleIndex": 0,
                    "message": {
                        "text": "Loading url from an intent to exported WebView allows other applications to have access to the target application"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uriBaseId": "%SRCROOT%",
                                    "uri": "app\\src\\main\\java\\com\\kiro\\lintsandbox\\JavaClass.java"
                                },
                                "region": {
                                    "startLine": 22,
                                    "startColumn": 17,
                                    "endLine": 22,
                                    "endColumn": 24,
                                    "charOffset": 601,
                                    "charLength": 7,
                                    "snippet": {
                                        "text": "loadUrl"
                                    }
                                },
                                "contextRegion": {
                                    "startLine": 20,
                                    "endLine": 25,
                                    "snippet": {
                                        "text": "        Intent i = new Intent();\n        String str = i.getStringExtra(\"reg_url\");\n        webView.loadUrl(str);\n        webView.loadUrl(i.getStringExtra(\"reg_url\"));"
                                    }
                                }
                            }
                        }
                    ],
                    "partialFingerprints": {
                        "sourceContext/v1": "8e53de065bd47605"
                    }
                },
                {
                    "ruleId": "InsecureWebViewImplementationIssueId",
                    "ruleIndex": 0,
                    "message": {
                        "text": "Loading url from an intent to exported WebView allows other applications to have access to the target application"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uriBaseId": "%SRCROOT%",
                                    "uri": "app\\src\\main\\java\\com\\kiro\\lintsandbox\\JavaClass.java"
                                },
                                "region": {
                                    "startLine": 23,
                                    "startColumn": 17,
                                    "endLine": 23,
                                    "endColumn": 24,
                                    "charOffset": 631,
                                    "charLength": 7,
                                    "snippet": {
                                        "text": "loadUrl"
                                    }
                                },
                                "contextRegion": {
                                    "startLine": 21,
                                    "endLine": 26,
                                    "snippet": {
                                        "text": "        String str = i.getStringExtra(\"reg_url\");\n        webView.loadUrl(str);\n        webView.loadUrl(i.getStringExtra(\"reg_url\"));\n"
                                    }
                                }
                            }
                        }
                    ],
                    "partialFingerprints": {
                        "sourceContext/v1": "04c0c3ffb81ae4a0"
                    }
                },
                {
                    "ruleId": "InsecureWebViewImplementationIssueId",
                    "ruleIndex": 0,
                    "message": {
                        "text": "Loading url from an intent to exported WebView allows other applications to have access to the target application"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uriBaseId": "%SRCROOT%",
                                    "uri": "app\\src\\main\\java\\com\\kiro\\lintsandbox\\JavaClass.java"
                                },
                                "region": {
                                    "startLine": 23,
                                    "startColumn": 27,
                                    "endLine": 23,
                                    "endColumn": 41,
                                    "charOffset": 641,
                                    "charLength": 14,
                                    "snippet": {
                                        "text": "getStringExtra"
                                    }
                                },
                                "contextRegion": {
                                    "startLine": 21,
                                    "endLine": 26,
                                    "snippet": {
                                        "text": "        String str = i.getStringExtra(\"reg_url\");\n        webView.loadUrl(str);\n        webView.loadUrl(i.getStringExtra(\"reg_url\"));\n"
                                    }
                                }
                            }
                        }
                    ],
                    "partialFingerprints": {
                        "sourceContext/v1": "04c0c3ffb81ae4a0"
                    }
                },
                {
                    "ruleId": "InsecureWebViewImplementationIssueId",
                    "ruleIndex": 0,
                    "message": {
                        "text": "Allowing to access content from any origin in the exported WebView allows attackers to read arbitrary files"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uriBaseId": "%SRCROOT%",
                                    "uri": "app\\src\\main\\java\\com\\kiro\\lintsandbox\\JavaClass.java"
                                },
                                "region": {
                                    "startLine": 25,
                                    "startColumn": 31,
                                    "endLine": 25,
                                    "endColumn": 66,
                                    "charOffset": 700,
                                    "charLength": 35,
                                    "snippet": {
                                        "text": "setAllowUniversalAccessFromFileURLs"
                                    }
                                },
                                "contextRegion": {
                                    "startLine": 23,
                                    "endLine": 28,
                                    "snippet": {
                                        "text": "        webView.loadUrl(i.getStringExtra(\"reg_url\"));\n\n        webView.getSettings().setAllowUniversalAccessFromFileURLs(true);\n"
                                    }
                                }
                            }
                        }
                    ],
                    "partialFingerprints": {
                        "sourceContext/v1": "a9fa208f2d2c9317"
                    }
                },
                {
                    "ruleId": "InsecureWebViewImplementationIssueId",
                    "ruleIndex": 0,
                    "message": {
                        "text": "Creating interface between webpage's JS and the client side Java allows XSS and token stealing"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uriBaseId": "%SRCROOT%",
                                    "uri": "app\\src\\main\\java\\com\\kiro\\lintsandbox\\JavaClass.java"
                                },
                                "region": {
                                    "startLine": 27,
                                    "startColumn": 17,
                                    "endLine": 27,
                                    "endColumn": 39,
                                    "charOffset": 760,
                                    "charLength": 22,
                                    "snippet": {
                                        "text": "addJavascriptInterface"
                                    }
                                },
                                "contextRegion": {
                                    "startLine": 25,
                                    "endLine": 30,
                                    "snippet": {
                                        "text": "        webView.getSettings().setAllowUniversalAccessFromFileURLs(true);\n\n        webView.addJavascriptInterface(new WebAppInterface(this), \"Android\");\n    }"
                                    }
                                }
                            }
                        }
                    ],
                    "partialFingerprints": {
                        "sourceContext/v1": "d3b7fb5188706ea6"
                    }
                },
                {
                    "ruleId": "ObsoleteSdkInt",
                    "ruleIndex": 1,
                    "message": {
                        "text": "This folder configuration (v24) is unnecessary; minSdkVersion is 28. Merge all the resources in this folder into drawable.",
                        "markdown": "This folder configuration (`v24`) is unnecessary; `minSdkVersion` is 28. Merge all the resources in this folder into `drawable`."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uriBaseId": "%SRCROOT%",
                                    "uri": "app\\src\\main\\res\\drawable-v24"
                                },
                                "region": {
                                    "startLine": 1
                                }                            }
                        }
                    ],
                    "fixes": [
                    ],
                    "partialFingerprints": {
                    }
                },
                {
                    "ruleId": "ObsoleteSdkInt",
                    "ruleIndex": 1,
                    "message": {
                        "text": "This folder configuration (v26) is unnecessary; minSdkVersion is 28. Merge all the resources in this folder into mipmap-anydpi.",
                        "markdown": "This folder configuration (`v26`) is unnecessary; `minSdkVersion` is 28. Merge all the resources in this folder into `mipmap-anydpi`."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uriBaseId": "%SRCROOT%",
                                    "uri": "app\\src\\main\\res\\mipmap-anydpi-v26"
                                },
                                "region": {
                                    "startLine": 1
                                }                            }
                        }
                    ],
                    "fixes": [
                    ],
                    "partialFingerprints": {
                    }
                },
                {
                    "ruleId": "UnusedResources",
                    "ruleIndex": 2,
                    "message": {
                        "text": "The resource R.layout.activity_java appears to be unused",
                        "markdown": "The resource `R.layout.activity_java` appears to be unused"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uriBaseId": "%SRCROOT%",
                                    "uri": "app\\src\\main\\res\\layout\\activity_java.xml"
                                },
                                "region": {
                                    "startLine": 2,
                                    "startColumn": 1,
                                    "endLine": 24,
                                    "endColumn": 53,
                                    "charOffset": 40,
                                    "charLength": 908,
                                    "snippet": {
                                        "text": "<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".JavaClass\">\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Hello World!\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <WebView\r\n        android:id=\"@+id/webview\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>"
                                    }
                                },
                                "contextRegion": {
                                    "startLine": 1,
                                    "endLine": 24,
                                    "snippet": {
                                        "text": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".JavaClass\">\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Hello World!\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <WebView\r\n        android:id=\"@+id/webview\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>"
                                    }
                                }
                            }
                        }
                    ],
                    "fixes": [
                    ],
                    "partialFingerprints": {
                        "sourceContext/v1": "4a89ab1b41eb2830"
                    }
                }
            ]
        }
    ]
}
